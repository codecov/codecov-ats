name: 'Codecov ATS'
description: "GitHub Action that returns selected test labels from Codecov☂️  to CI"
inputs:
  token:
    description: 'Repository upload token - get it from codecov.io. Required'
    required: false
  static_token:
    description: 'Repository static token - get it from codecov.io. Required'
    required: true
  colorize:
    description: "Colorize the output"
    required: false
    default: true
  enterprise_url:
    description: 'Change the upload host (Enterprise use only)'
    required: false
  fail_ci_if_error:
    description: 'Specify whether or not CI build should fail if Codecov runs into an error during upload'
    required: false
  file_pattern:
    description: "File pattern to search for. Defaults to '*'"
    required: false
  folders_to_exclude:
    description: "Avoid certain folders when uploading static analysis"
    requred: false
  force:
    description: 'Force upload of files during static analysis regardless if they are new'
    required: false
  max_wait_time:
    description: 'Max time (in seconds) to wait for the label analysis. Default is to wait forever.'
    required: false
  os:
    description: 'Override the assumed OS. Options are linux | macos | windows.'
    required: false
  output_variable:
    description: 'Variable to save down tests string. Defaults to CODECOV_ATS_TESTS'
    required: false
  override_base_commit:
    description: 'Override the assumed base commit.'
    required: false
  override_commit:
    description: 'Commit SHA (with 40 chars)'
    required: false
  verbose:
    description: 'Specify whether the Codecov output should be verbose'
    required: false
  version:
    description: 'Specify which version of the Codecov CLI should be used. Defaults to `latest`'
    required: false

branding:
  color: 'red'
  icon: 'umbrella'

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        if [ "${{ inputs.colorize }}" == "true" ]; then
          echo "DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION=true" >> $GITHUB_ENV
          echo "TERM=xterm" >> $GITHUB_ENV
        fi

    - id: codecov-ats
      run: |
        commands=$(./codecov_ats.sh | tail -n 1)
        echo "CODECOV_ATS_TESTS=$commands" >> "$GITHUB_ENV"
      shell: bash
      env:
        INPUTS_CODECOV_STATIC_TOKEN: ${{ inputs.static_token }}
        INPUTS_CODECOV_TOKEN: ${{ inputs.token }}
        INPUTS_ENTERPRISE_URL: ${{ inputs.enterprise_url }}
        INPUTS_VERBOSE: ${{ inputs.verbose }}
